[
    {
        "id": 0,
        "valid_datapoint": true,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \" Beijing\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \" Shanghai\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": " Beijing",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": " Shanghai",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match:  Beijing, ideal-opt: ['Beijing, China']"
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"\u5317\u4eac,China\",\"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"\u4e0a\u6d77,China\",\"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "\u5317\u4eac,China",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "\u4e0a\u6d77,China",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: \u5317\u4eac,China, ideal-opt: ['Beijing, China']"
        },
        "input": [
            {
                "role": "user",
                "content": "\u8bf7\u95ee\u5317\u4eac\u7684\u5f53\u524d\u5929\u6c14\u72b6\u51b5\u5982\u4f55\uff1f\u8fd8\u6709\uff0c\u4e0a\u6d77\u7684\u5929\u6c14\u60c5\u51b5\u662f\u600e\u6837\u7684\uff1f"
            }
        ],
        "tools": [
            {
                "type": "function",
                "function": {
                    "name": "get_current_weather",
                    "description": "Retrieves the current weather conditions for a specified city and state.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "location"
                        ],
                        "properties": {
                            "location": {
                                "type": "string",
                                "description": "The location for which to get the weather, in the format of 'City, State', such as 'San Francisco, CA' if State for the city exists. 'City, Country' if State for the city doesn't exist."
                            },
                            "unit": {
                                "type": "string",
                                "description": "The unit of temperature for the weather report.",
                                "enum": [
                                    "celsius",
                                    "fahrenheit"
                                ],
                                "default": "fahrenheit"
                            }
                        }
                    }
                }
            }
        ],
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Beijing, China"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Shanghai, China"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            }
        ]
    },
    {
        "id": 1,
        "valid_datapoint": true,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Boston, MA\", \"unit\": \"fahrenheit\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"San Francisco, CA\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "unit": "fahrenheit"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, CA"
                        }
                    }
                }
            ],
            "success": true,
            "err_type": null,
            "err_msg": null
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Boston, MA\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"San Francisco\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: San Francisco, ideal-opt: ['San Francisco, CA']"
        },
        "input": [
            {
                "role": "user",
                "content": "Could you tell me the current weather conditions for Boston, MA and also for San Francisco?"
            }
        ],
        "tools": [
            {
                "type": "function",
                "function": {
                    "name": "get_current_weather",
                    "description": "Retrieves the current weather conditions for a specified city and state.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "location"
                        ],
                        "properties": {
                            "location": {
                                "type": "string",
                                "description": "The location for which to get the weather, in the format of 'City, State', such as 'San Francisco, CA' if State for the city exists. 'City, Country' if State for the city doesn't exist. Use short form for state."
                            },
                            "unit": {
                                "type": "string",
                                "description": "The unit of temperature for the weather report.",
                                "enum": [
                                    "celsius",
                                    "fahrenheit"
                                ],
                                "default": "fahrenheit"
                            }
                        }
                    }
                }
            }
        ],
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Boston, MA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "San Francisco, CA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            }
        ]
    },
    {
        "id": 2,
        "valid_datapoint": true,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Boston\", \"unit\": \"fahrenheit\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"San Francisco\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston",
                            "unit": "fahrenheit"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: Boston, ideal-opt: ['Boston, MA']"
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Boston, MA\", \"unit\": \"fahrenheit\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"San Francisco, CA\", \"unit\": \"fahrenheit\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "unit": "fahrenheit"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, CA",
                            "unit": "fahrenheit"
                        }
                    }
                }
            ],
            "success": true,
            "err_type": null,
            "err_msg": null
        },
        "input": [
            {
                "role": "user",
                "content": "<<question>> What\\'s the weather like in the two cities of Boston and San Francisco?"
            }
        ],
        "tools": [
            {
                "type": "function",
                "function": {
                    "name": "get_current_weather",
                    "description": "Retrieves the current weather conditions for a specified city and state.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "location"
                        ],
                        "properties": {
                            "location": {
                                "type": "string",
                                "description": "The location for which to get the weather, in the format of 'City, State', such as 'San Francisco, CA' if State for the city exists. 'City, Country' if State for the city doesn't exist. Use short form for the state"
                            },
                            "unit": {
                                "type": "string",
                                "description": "The unit of temperature for the weather report.",
                                "enum": [
                                    "celsius",
                                    "fahrenheit"
                                ],
                                "default": "fahrenheit"
                            }
                        }
                    }
                }
            }
        ],
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Boston, MA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "San Francisco, CA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            }
        ]
    },
    {
        "id": 3,
        "valid_datapoint": true,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Canc\\u nz, QR\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Playa del Carmen, QR\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Tulum, QR\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Playa del Carmen, QR",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Tulum, QR",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: Playa del Carmen, QR, ideal-opt: ['Canc\u00fan, QR', 'Canc\\\\u00fan, QR']"
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Cancun, QR\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Playa del Carmen, QR\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Tulum, QR\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Cancun, QR",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Playa del Carmen, QR",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Tulum, QR",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "CALL_NUMBER_ERROR",
            "err_msg": "wrong calling numbers."
        },
        "input": [
            {
                "role": "system",
                "content": "Eres un asistente IA. Has sido capacitado con una superinteligencia, formidable para comunicar con usuarios en espa\u00f1ol, interpretar sus necesidades y actuar a travez de ellos."
            },
            {
                "role": "user",
                "content": "\u00bfPodr\u00edas decirme las condiciones actuales del clima en Canc\u00fan, QR, Playa del Carmen, QR y Tulum, QR?"
            }
        ],
        "tools": [
            {
                "type": "function",
                "function": {
                    "name": "get_current_weather",
                    "description": "Retrieves the current weather conditions for a specified city and state.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "location"
                        ],
                        "properties": {
                            "location": {
                                "type": "string",
                                "description": "The location for which to get the weather, in the format of 'City, State', such as 'San Francisco, CA' if State for the city exists. 'City, Country' if State for the city doesn't exist. Use short form if using state name"
                            },
                            "unit": {
                                "type": "string",
                                "description": "The unit of temperature for the weather report.",
                                "enum": [
                                    "celsius",
                                    "fahrenheit"
                                ],
                                "default": "fahrenheit"
                            }
                        }
                    }
                }
            }
        ],
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Canc\u00fan, QR",
                        "Canc\\u00fan, QR"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Playa del Carmen, QR"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Tulum, QR"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            }
        ]
    },
    {
        "id": 4,
        "valid_datapoint": true,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Boston, USA\", \"url\": \"https://api.open-meteo.com/v1/forecast\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"San Francisco, USA\", \"url\": \"https://api.open-meteo.com/v1/forecast\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, USA",
                            "url": "https://api.open-meteo.com/v1/forecast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, USA",
                            "url": "https://api.open-meteo.com/v1/forecast"
                        }
                    }
                }
            ],
            "success": true,
            "err_type": null,
            "err_msg": null
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Boston, USA\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"San Francisco, USA\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, USA"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, USA"
                        }
                    }
                }
            ],
            "success": true,
            "err_type": null,
            "err_msg": null
        },
        "input": [
            {
                "role": "user",
                "content": "Could you tell me the current weather in Boston, USA and also in San Francisco, USA?"
            }
        ],
        "tools": [
            {
                "type": "function",
                "function": {
                    "name": "get_current_weather",
                    "description": "Retrieves the current weather information for a specified geographic location.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "location"
                        ],
                        "properties": {
                            "location": {
                                "type": "string",
                                "description": "The geographic location for which to fetch the weather data, in the format of 'City, Country' (e.g., 'London, UK')."
                            },
                            "url": {
                                "type": "string",
                                "description": "The API endpoint for fetching weather data. This should be a fully qualified URL pointing to the Open-Meteo API with the appropriate query parameters for latitude and longitude.",
                                "default": "https://api.open-meteo.com/v1/forecast"
                            }
                        }
                    }
                }
            }
        ],
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Boston, USA"
                    ],
                    "url": [
                        "",
                        "https://api.open-meteo.com/v1/forecast"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "San Francisco, USA"
                    ],
                    "url": [
                        "",
                        "https://api.open-meteo.com/v1/forecast"
                    ]
                }
            }
        ]
    },
    {
        "id": 5,
        "valid_datapoint": true,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Boston, MA\", \"url\": \"https://api.open-meteo.com/v1/forecast\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"San Francisco, CA\", \"url\": \"https://api.open-meteo.com/v1/forecast\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "url": "https://api.open-meteo.com/v1/forecast",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, CA",
                            "url": "https://api.open-meteo.com/v1/forecast",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: celsius, ideal-opt: ['', 'fahrenheit']"
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Boston, MA\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"San Francisco, CA\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, CA",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: celsius, ideal-opt: ['', 'fahrenheit']"
        },
        "input": [
            {
                "role": "user",
                "content": "Could you tell me the current temperature in Boston, MA and San Francisco, please?"
            }
        ],
        "tools": [
            {
                "type": "function",
                "function": {
                    "name": "get_current_weather",
                    "description": "Retrieves the current weather information for a specified location using the Open-Meteo API.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "location"
                        ],
                        "properties": {
                            "url": {
                                "type": "string",
                                "description": "The API endpoint for fetching weather data, with a default value pointing to the Open-Meteo API service.",
                                "default": "https://api.open-meteo.com/v1/forecast"
                            },
                            "location": {
                                "type": "string",
                                "description": "The geographical location for which to retrieve weather data, in the format of 'City, State', such as 'San Francisco, CA'. If using state name, then use short form."
                            },
                            "unit": {
                                "type": "string",
                                "description": "The unit of measurement for temperature values.",
                                "enum": [
                                    "celsius",
                                    "fahrenheit"
                                ],
                                "default": "celsius"
                            }
                        }
                    }
                }
            }
        ],
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Boston, MA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ],
                    "url": [
                        "",
                        "https://api.open-meteo.com/v1/forecast"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "San Francisco, CA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ],
                    "url": [
                        "",
                        "https://api.open-meteo.com/v1/forecast"
                    ]
                }
            }
        ]
    },
    {
        "id": 6,
        "valid_datapoint": true,
        "no_stag": {
            "output": "{\"name\": \"get_snow_report\", \"parameters\": {\"location\": \"Paris, France\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_snow_report",
                        "arguments": {
                            "location": "Paris, France",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "CALL_NUMBER_ERROR",
            "err_msg": "wrong calling numbers."
        },
        "use_stag": {
            "output": "{\"name\": \"get_snow_report\", \"parameters\":{\"location\": \"Paris, France\"}}; {\"name\": \"get_snow_report\", \"parameters\":{\"location\": \"Bordeaux, France\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_snow_report",
                        "arguments": {
                            "location": "Paris, France"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_snow_report",
                        "arguments": {
                            "location": "Bordeaux, France"
                        }
                    }
                }
            ],
            "success": true,
            "err_type": null,
            "err_msg": null
        },
        "input": [
            {
                "role": "user",
                "content": "What's the snow like in the two cities of Paris and Bordeaux?"
            }
        ],
        "tools": [
            {
                "type": "function",
                "function": {
                    "name": "get_current_weather",
                    "description": "Retrieves the current weather conditions for a specified location.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "location"
                        ],
                        "properties": {
                            "location": {
                                "type": "string",
                                "description": "The location for which to get the weather, in the format of 'City, State' (e.g., 'San Francisco, CA'). If city does not have a state, then just mention the name of the city."
                            },
                            "unit": {
                                "type": "string",
                                "description": "The unit of measurement for temperature values.",
                                "enum": [
                                    "celsius",
                                    "fahrenheit"
                                ],
                                "default": "fahrenheit"
                            }
                        }
                    }
                }
            },
            {
                "type": "function",
                "function": {
                    "name": "get_snow_report",
                    "description": "Retrieves the latest snow report for a specified location, providing details about the snow conditions and weather.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "location"
                        ],
                        "properties": {
                            "location": {
                                "type": "string",
                                "description": "The location for which to get the snow report, in the format of 'City, State' or 'City, Country', such as 'Aspen, CO' or 'Paris, France'."
                            },
                            "unit": {
                                "type": "string",
                                "description": "The temperature unit to be used in the snow report.",
                                "enum": [
                                    "celsius",
                                    "fahrenheit"
                                ],
                                "default": "fahrenheit"
                            }
                        }
                    }
                }
            }
        ],
        "expected": [
            {
                "name": "get_snow_report",
                "arguments": {
                    "location": [
                        "Paris, France"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_snow_report",
                "arguments": {
                    "location": [
                        "Bordeaux, France"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            }
        ]
    },
    {
        "id": 7,
        "valid_datapoint": true,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Boston, MA\", \"unit\": \"fahrenheit\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"San Francisco, CA\", \"unit\": \"fahrenheit\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "unit": "fahrenheit"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, CA",
                            "unit": "fahrenheit"
                        }
                    }
                }
            ],
            "success": true,
            "err_type": null,
            "err_msg": null
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Boston, MA\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"San Francisco, CA\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, CA",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: celsius, ideal-opt: ['', 'fahrenheit']"
        },
        "input": [
            {
                "role": "user",
                "content": "What's the weather like in the two cities of Boston and San Francisco?"
            }
        ],
        "tools": [
            {
                "type": "function",
                "function": {
                    "name": "get_current_weather",
                    "description": "Retrieves the current weather conditions for a specified location.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "location"
                        ],
                        "properties": {
                            "location": {
                                "type": "string",
                                "description": "The location for which to get the weather, in the format of 'City, State' (e.g., 'San Francisco, CA'). For state, use short form."
                            },
                            "unit": {
                                "type": "string",
                                "description": "The unit of measurement for temperature values.",
                                "enum": [
                                    "celsius",
                                    "fahrenheit"
                                ],
                                "default": "fahrenheit"
                            }
                        }
                    }
                }
            },
            {
                "type": "function",
                "function": {
                    "name": "get_snow_report",
                    "description": "Retrieves the latest snow report for a specified location, providing details about the snow conditions and weather.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "location"
                        ],
                        "properties": {
                            "location": {
                                "type": "string",
                                "description": "The location for which to get the snow report, in the format of 'City, State', such as 'Aspen, CO'."
                            },
                            "unit": {
                                "type": "string",
                                "description": "The temperature unit to be used in the snow report.",
                                "enum": [
                                    "celsius",
                                    "fahrenheit"
                                ],
                                "default": "fahrenheit"
                            }
                        }
                    }
                }
            }
        ],
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Boston, MA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "San Francisco, CA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            }
        ]
    },
    {
        "id": 8,
        "valid_datapoint": true,
        "no_stag": {
            "output": "{\"name\": \"todo\", \"parameters\": {\"type\": \"add\", \"content\": \"Machine Learning Study Session\"}}",
            "call": [
                {
                    "function": {
                        "name": "todo",
                        "arguments": {
                            "type": "add",
                            "content": "Machine Learning Study Session"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "CALL_NUMBER_ERROR",
            "err_msg": "wrong calling numbers."
        },
        "use_stag": {
            "output": "{\"name\": \"todo\", \"parameters\":{\"type\": \"add\", \"content\": \"Machine Learning Study Session\"}}; {\"name\": \"todo\", \"parameters\":{\"type\": \"delete\", \"content\": \"todo random\"}}",
            "call": [
                {
                    "function": {
                        "name": "todo",
                        "arguments": {
                            "type": "add",
                            "content": "Machine Learning Study Session"
                        }
                    }
                },
                {
                    "function": {
                        "name": "todo",
                        "arguments": {
                            "type": "delete",
                            "content": "todo random"
                        }
                    }
                }
            ],
            "success": true,
            "err_type": null,
            "err_msg": null
        },
        "input": [
            {
                "role": "user",
                "content": "Hi there! Could you please help me manage my tasks? I need to add a task called 'Machine Learning Study Session'. Also, I have completed one of my tasks named 'todo random', and I would like to delete it from my list."
            }
        ],
        "tools": [
            {
                "type": "function",
                "function": {
                    "name": "todo",
                    "description": "Manages a todo list allowing the user to add, delete, or update items.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "type",
                            "content"
                        ],
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "The action to be performed on the todo list.",
                                "enum": [
                                    "add",
                                    "delete",
                                    "update"
                                ]
                            },
                            "content": {
                                "type": "string",
                                "description": "The details of the todo item relevant to the action being performed."
                            }
                        }
                    }
                }
            }
        ],
        "expected": [
            {
                "name": "todo",
                "arguments": {
                    "type": [
                        "add"
                    ],
                    "content": [
                        "Machine Learning Study Session"
                    ]
                }
            },
            {
                "name": "todo",
                "arguments": {
                    "type": [
                        "delete"
                    ],
                    "content": [
                        "todo random"
                    ]
                }
            }
        ]
    },
    {
        "id": 9,
        "valid_datapoint": true,
        "no_stag": {
            "output": "{\"name\": \"get_aws_pricing\", \"parameters\": {\"memory\": \"2\", \"cpu\": \"single\", \"region\": \"us-east-1\"}}; {\"name\": \"get_aws_pricing\", \"parameters\": {\"memory\": \"4\", \"cpu\": \"single\", \"region\": \"us-east-1\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_aws_pricing",
                        "arguments": {
                            "memory": "2",
                            "cpu": "single",
                            "region": "us-east-1"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_aws_pricing",
                        "arguments": {
                            "memory": "4",
                            "cpu": "single",
                            "region": "us-east-1"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "TYPE_ERROR",
            "err_msg": "wrong type 2: not int"
        },
        "use_stag": {
            "output": "{\"name\": \"get_aws_pricing\", \"parameters\":{\"memory\": 2, \"cpu\": \"single\", \"region\": \"any\"}}; {\"name\": \"get_aws_pricing\", \"parameters\":{\"memory\": 4, \"cpu\": \"single\", \"region\": \"any\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_aws_pricing",
                        "arguments": {
                            "memory": 2,
                            "cpu": "single",
                            "region": "any"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_aws_pricing",
                        "arguments": {
                            "memory": 4,
                            "cpu": "single",
                            "region": "any"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: any, ideal-opt: ['', 'us-east-1']"
        },
        "input": [
            {
                "role": "user",
                "content": "What's cost of 2 and 4 gb ram machine on aws ec2 with one CPU?"
            }
        ],
        "tools": [
            {
                "type": "function",
                "function": {
                    "name": "get_aws_pricing",
                    "description": "Retrieves the pricing information for an AWS EC2 instance based on the provided memory and CPU requirements. The returned pricing is an estimate and may vary based on region and availability.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "memory",
                            "cpu"
                        ],
                        "properties": {
                            "memory": {
                                "type": "integer",
                                "description": "The amount of memory required for the instance in gigabytes (GB)."
                            },
                            "cpu": {
                                "type": "string",
                                "description": "The number of CPU units required for the instance. Valid options are 'single', 'dual', or 'quad'.",
                                "enum": [
                                    "single",
                                    "dual",
                                    "quad"
                                ]
                            },
                            "region": {
                                "type": "string",
                                "description": "The AWS region where the instance will be launched, such as 'us-east-1' or 'eu-central-1'.",
                                "default": "us-east-1"
                            },
                            "operating_system": {
                                "type": "string",
                                "description": "The operating system to be used on the instance.",
                                "enum": [
                                    "Linux",
                                    "Windows"
                                ],
                                "default": "Linux"
                            }
                        }
                    }
                }
            }
        ],
        "expected": [
            {
                "name": "get_aws_pricing",
                "arguments": {
                    "memory": [
                        2
                    ],
                    "cpu": [
                        "single"
                    ],
                    "region": [
                        "",
                        "us-east-1"
                    ],
                    "operating_system0": [
                        "",
                        "Linux"
                    ]
                }
            },
            {
                "name": "get_aws_pricing",
                "arguments": {
                    "memory": [
                        4
                    ],
                    "cpu": [
                        "single"
                    ],
                    "region": [
                        "",
                        "us-east-1"
                    ],
                    "operating_system0": [
                        "",
                        "Linux"
                    ]
                }
            }
        ]
    },
    {
        "id": 10,
        "valid_datapoint": true,
        "no_stag": {
            "output": "{\"name\": \"hotel_booking_book\", \"parameters\": {\"hotel_name\": \"Sheraton Hotel\", \"location\": \"New York, NY\", \"check_in\": \"2022-05-01\", \"check_out\": \"2022-05-05\", \"adults\": \"2\", \"children\": \"1\"}}; {\"name\": \"hotel_booking_book\", \"parameters\": {\"hotel_name\": \"Marriott\", \"location\": \"Los Angeles, CA\", \"check_in\": \"2022-06-01\", \"check_out\": \"2022-06-10\", \"adults\": \"1\", \"children\": \"2\"}}",
            "call": [
                {
                    "function": {
                        "name": "hotel_booking_book",
                        "arguments": {
                            "hotel_name": "Sheraton Hotel",
                            "location": "New York, NY",
                            "check_in": "2022-05-01",
                            "check_out": "2022-05-05",
                            "adults": "2",
                            "children": "1"
                        }
                    }
                },
                {
                    "function": {
                        "name": "hotel_booking_book",
                        "arguments": {
                            "hotel_name": "Marriott",
                            "location": "Los Angeles, CA",
                            "check_in": "2022-06-01",
                            "check_out": "2022-06-10",
                            "adults": "1",
                            "children": "2"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: Marriott, ideal-opt: ['Sheraton Hotel', 'Sheraton', 'Hotel Sheraton']"
        },
        "use_stag": {
            "output": "{\"name\": \"hotel_booking_book\", \"parameters\":{\"hotel_name\": \"Sheraton Hotel\", \"location\": \"New York\", \"check_in\": \"2022-05-01\", \"check_out\": \"2022-05-05\", \"adults\": 2, \"children\": 1}}; {\"name\": \"hotel_booking_book\", \"parameters\":{\"hotel_name\": \"Marriott\", \"location\": \"Los Angeles\", \"check_in\": \"2022-06-01\", \"check_out\": \"2022-06-10\", \"adults\": 1, \"children\": 2}}",
            "call": [
                {
                    "function": {
                        "name": "hotel_booking_book",
                        "arguments": {
                            "hotel_name": "Sheraton Hotel",
                            "location": "New York",
                            "check_in": "2022-05-01",
                            "check_out": "2022-05-05",
                            "adults": 2,
                            "children": 1
                        }
                    }
                },
                {
                    "function": {
                        "name": "hotel_booking_book",
                        "arguments": {
                            "hotel_name": "Marriott",
                            "location": "Los Angeles",
                            "check_in": "2022-06-01",
                            "check_out": "2022-06-10",
                            "adults": 1,
                            "children": 2
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: New York, ideal-opt: ['New York, NY']"
        },
        "input": [
            {
                "role": "user",
                "content": "I need to make a couple of hotel reservations. First, secure a room for 2 adults and 1 child at the Sheraton Hotel in New York with check-in on May 1, 2022, and check-out on May 5, 2022. Then, reserve a room for 1 adult and 2 children at the Marriott in Los Angeles, checking in on June 1, 2022, and checking out on June 10, 2022."
            }
        ],
        "tools": [
            {
                "type": "function",
                "function": {
                    "name": "hotel_booking_book",
                    "description": "Book a hotel room at the specified location for the specified number of adults and children, ensuring the accommodation dates are available.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "hotel_name",
                            "location",
                            "check_in",
                            "check_out",
                            "adults",
                            "children"
                        ],
                        "properties": {
                            "hotel_name": {
                                "type": "string",
                                "description": "The name of the hotel to book."
                            },
                            "location": {
                                "type": "string",
                                "description": "The location of the hotel, in the format of 'City, State', such as 'San Francisco, CA' or 'New York, NY'."
                            },
                            "check_in": {
                                "type": "string",
                                "description": "The check-in date for the booking, in the format 'YYYY-MM-DD'."
                            },
                            "check_out": {
                                "type": "string",
                                "description": "The check-out date for the booking, in the format 'YYYY-MM-DD'."
                            },
                            "adults": {
                                "type": "integer",
                                "description": "The number of adults included in the booking."
                            },
                            "children": {
                                "type": "integer",
                                "description": "The number of children included in the booking."
                            }
                        }
                    }
                }
            }
        ],
        "expected": [
            {
                "name": "hotel_booking_book",
                "arguments": {
                    "hotel_name": [
                        "Sheraton Hotel",
                        "Sheraton",
                        "Hotel Sheraton"
                    ],
                    "location": [
                        "New York, NY"
                    ],
                    "check_in": [
                        "2022-05-01"
                    ],
                    "check_out": [
                        "2022-05-05"
                    ],
                    "adults": [
                        2
                    ],
                    "children": [
                        1
                    ]
                }
            },
            {
                "name": "hotel_booking_book",
                "arguments": {
                    "hotel_name": [
                        "Marriott"
                    ],
                    "location": [
                        "Los Angeles, CA"
                    ],
                    "check_in": [
                        "2022-06-01"
                    ],
                    "check_out": [
                        "2022-06-10"
                    ],
                    "adults": [
                        1
                    ],
                    "children": [
                        2
                    ]
                }
            }
        ]
    },
    {
        "id": 11,
        "valid_datapoint": true,
        "no_stag": {
            "output": "{\"name\": \"log_food\", \"parameters\": {\"food_name\": \"frozen mango\", \"portion_amount\": \"8\", \"portion_unit\": \"pieces\", \"meal_type\": \"snack\", \"log_date\": \"current date and time (I'll leave it blank since I'm an AI and don't know the current date and time)\"}}; {\"name\": \"log_food\", \"parameters\": {\"food_name\": \"pepperoni pizza\", \"portion_amount\": \"2\", \"portion_unit\": \"slices\", \"meal_type\": \"breakfast\", \"log_date\": \"current date and time (I'll leave it blank since I'm an AI and don't know the current date and time)\"}}; {\"name\": \"log_food\", \"parameters\": {\"food_name\": \"chai tea\", \"portion_amount\": \"1\", \"portion_unit\": \"cup\", \"meal_type\": \"snack\", \"log_date\": \"current date and time (I'll leave it blank since I'm an AI and don't know the current date and time)\"}}; {\"name\": \"log_food\", \"parameters\": {\"food_name\": \"coffee\", \"portion_amount\": \"1\", \"portion_unit\": \"cup\", \"meal_type\": \"breakfast\", \"log_date\": \"current date and time (I'll leave it blank since I'm an AI and don't know the current date and time)\"}}",
            "call": [
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "frozen mango",
                            "portion_amount": "8",
                            "portion_unit": "pieces",
                            "meal_type": "snack",
                            "log_date": "current date and time (I'll leave it blank since I'm an AI and don't know the current date and time)"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "pepperoni pizza",
                            "portion_amount": "2",
                            "portion_unit": "slices",
                            "meal_type": "breakfast",
                            "log_date": "current date and time (I'll leave it blank since I'm an AI and don't know the current date and time)"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "chai tea",
                            "portion_amount": "1",
                            "portion_unit": "cup",
                            "meal_type": "snack",
                            "log_date": "current date and time (I'll leave it blank since I'm an AI and don't know the current date and time)"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "coffee",
                            "portion_amount": "1",
                            "portion_unit": "cup",
                            "meal_type": "breakfast",
                            "log_date": "current date and time (I'll leave it blank since I'm an AI and don't know the current date and time)"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "CALL_NUMBER_ERROR",
            "err_msg": "wrong calling numbers."
        },
        "use_stag": {
            "output": "{\"name\": \"log_food\", \"parameters\":{\"food_name\": \"frozen mango\", \"portion_amount\": 8, \"portion_unit\": \"piece\", \"meal_type\": \"snack\", \"log_date\": \"null\"}}; {\"name\": \"log_food\", \"parameters\":{\"food_name\": \"chai tea\", \"portion_amount\": 1, \"portion_unit\": \"cup\", \"meal_type\": \"snack\", \"log_date\": \"null\"}}; {\"name\": \"log_food\", \"parameters\":{\"food_name\": \"pepperoni pizza\", \"portion_amount\": 2, \"portion_unit\": \"slice\", \"meal_type\": \"breakfast\", \"log_date\": \"null\"}}; {\"name\": \"log_food\", \"parameters\":{\"food_name\": \"coffee\", \"portion_amount\": 1, \"portion_unit\": \"cup\", \"meal_type\": \"breakfast\", \"log_date\": \"null\"}}",
            "call": [
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "frozen mango",
                            "portion_amount": 8,
                            "portion_unit": "piece",
                            "meal_type": "snack",
                            "log_date": "null"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "chai tea",
                            "portion_amount": 1,
                            "portion_unit": "cup",
                            "meal_type": "snack",
                            "log_date": "null"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "pepperoni pizza",
                            "portion_amount": 2,
                            "portion_unit": "slice",
                            "meal_type": "breakfast",
                            "log_date": "null"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "coffee",
                            "portion_amount": 1,
                            "portion_unit": "cup",
                            "meal_type": "breakfast",
                            "log_date": "null"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "CALL_NUMBER_ERROR",
            "err_msg": "wrong calling numbers."
        },
        "input": [
            {
                "role": "user",
                "content": "I had 8 pieces of frozen mango and a chai tea.\n\nEarlier I had two slices of pepperoni pizza and a coffee"
            }
        ],
        "tools": [
            {
                "type": "function",
                "function": {
                    "name": "log_food",
                    "description": "Logs a food item with a given portion size to track dietary intake.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "food_name",
                            "portion_amount",
                            "portion_unit"
                        ],
                        "properties": {
                            "food_name": {
                                "type": "string",
                                "description": "The name of the food to log, such as 'apple', 'bread', or 'chicken breast'."
                            },
                            "portion_amount": {
                                "type": "number",
                                "description": "The amount of the food item that was consumed, specified in the unit given by portion_unit."
                            },
                            "portion_unit": {
                                "type": "string",
                                "description": "The unit of measure for the portion amount, such as 'cup', 'grams', or 'slice'.",
                                "enum": [
                                    "cup",
                                    "grams",
                                    "slice",
                                    "piece",
                                    "tablespoon"
                                ]
                            },
                            "meal_type": {
                                "type": "string",
                                "description": "The type of meal or snack this food item is being logged for.",
                                "enum": [
                                    "breakfast",
                                    "lunch",
                                    "dinner",
                                    "snack"
                                ],
                                "default": "snack"
                            },
                            "log_date": {
                                "type": "string",
                                "description": "The date and time when the food was consumed, in ISO 8601 format such as 'YYYY-MM-DDTHH:MM:SSZ'.",
                                "default": null
                            }
                        }
                    }
                }
            }
        ],
        "expected": [
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "frozen mango"
                    ],
                    "portion_amount": [
                        8.0
                    ],
                    "portion_unit": [
                        "piece"
                    ],
                    "meal_type": [
                        "",
                        "snack"
                    ]
                }
            },
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "chai tea"
                    ],
                    "portion_amount": [
                        1.0
                    ],
                    "portion_unit": [
                        "cup"
                    ],
                    "meal_type": [
                        "",
                        "snack"
                    ]
                }
            },
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "pepperoni pizza"
                    ],
                    "portion_amount": [
                        2.0
                    ],
                    "portion_unit": [
                        "slice"
                    ],
                    "meal_type": [
                        "",
                        "snack"
                    ]
                }
            },
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "coffee"
                    ],
                    "portion_amount": [
                        1.0
                    ],
                    "portion_unit": [
                        "cup"
                    ],
                    "meal_type": [
                        "",
                        "snack"
                    ]
                }
            }
        ]
    },
    {
        "id": 12,
        "valid_datapoint": true,
        "no_stag": {
            "output": "{\"name\": \"log_food\", \"parameters\": {\"food_name\": \"iced coffee\", \"portion_amount\": \"12\", \"portion_unit\": \"ounces\", \"meal_name\": \"breakfast\"}}; {\"name\": \"log_food\", \"parameters\": {\"food_name\": \"banana\", \"portion_amount\": \"no specific amount provided (assuming 1 unit)\", \"portion_unit\": \"units\", \"meal_name\": \"breakfast\"}}; {\"name\": \"log_food\", \"parameters\": {\"food_name\": \"quesadilla\", \"portion_amount\": \"no specific amount provided (assuming 1 unit)\", \"portion_unit\": \"units\", \"meal_name\": \"lunch\"}}; {\"name\": \"log_food\", \"parameters\": {\"food_name\": \"asparagus\", \"portion_amount\": \"4\", \"portion_unit\": \"ounces\", \"meal_name\": \"breakfast\"}}; {\"name\": \"log_food\", \"parameters\": {\"food_name\": \"eggs\", \"portion_amount\": \"2\", \"portion_unit\": \"units\", \"meal_name\": \"breakfast\"}}; {\"name\": \"log_food\", \"parameters\": {\"food_name\": \"bread\", \"portion_amount\": \"1\", \"portion_unit\": \"pieces\", \"meal_name\": \"breakfast\"}}",
            "call": [
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "iced coffee",
                            "portion_amount": "12",
                            "portion_unit": "ounces",
                            "meal_name": "breakfast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "banana",
                            "portion_amount": "no specific amount provided (assuming 1 unit)",
                            "portion_unit": "units",
                            "meal_name": "breakfast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "quesadilla",
                            "portion_amount": "no specific amount provided (assuming 1 unit)",
                            "portion_unit": "units",
                            "meal_name": "lunch"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "asparagus",
                            "portion_amount": "4",
                            "portion_unit": "ounces",
                            "meal_name": "breakfast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "eggs",
                            "portion_amount": "2",
                            "portion_unit": "units",
                            "meal_name": "breakfast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "bread",
                            "portion_amount": "1",
                            "portion_unit": "pieces",
                            "meal_name": "breakfast"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "CALL_NUMBER_ERROR",
            "err_msg": "wrong calling numbers."
        },
        "use_stag": {
            "output": "{\"name\": \"log_food\", \"parameters\":{\"food_name\": \"iced coffee\", \"portion_amount\": 12, \"portion_unit\": \"ounces\", \"meal_name\": \"breakfast\"}}; {\"name\": \"log_food\", \"parameters\":{\"food_name\": \"banana\", \"portion_amount\": 1, \"portion_unit\": \"pieces\", \"meal_name\": \"breakfast\"}}; {\"name\": \"log_food\", \"parameters\":{\"food_name\": \"quesadilla\", \"portion_amount\": 1, \"portion_unit\": \"pieces\", \"meal_name\": \"lunch\"}}; {\"name\": \"log_food\", \"parameters\":{ \"food_name\": \"asparagus\", \"portion_amount\": 4, \"portion_unit\": \"ounces\", \"meal_name\": \"breakfast\"}}; {\"name\": \"log_food\", \"parameters\":{ \"food_name\": \"eggs\", \"portion_amount\": 2, \"portion_unit\": \"pieces\", \"meal_name\": \"breakfast\"}}; {\"name\": \"log_food\", \"parameters\":{ \"food_name\": \"gluten free bread\", \"portion_amount\": 1, \"portion_unit\": \"pieces\", \"meal_name\": \"breakfast\"}}",
            "call": [
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "iced coffee",
                            "portion_amount": 12,
                            "portion_unit": "ounces",
                            "meal_name": "breakfast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "banana",
                            "portion_amount": 1,
                            "portion_unit": "pieces",
                            "meal_name": "breakfast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "quesadilla",
                            "portion_amount": 1,
                            "portion_unit": "pieces",
                            "meal_name": "lunch"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "asparagus",
                            "portion_amount": 4,
                            "portion_unit": "ounces",
                            "meal_name": "breakfast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "eggs",
                            "portion_amount": 2,
                            "portion_unit": "pieces",
                            "meal_name": "breakfast"
                        }
                    }
                },
                {
                    "function": {
                        "name": "log_food",
                        "arguments": {
                            "food_name": "gluten free bread",
                            "portion_amount": 1,
                            "portion_unit": "pieces",
                            "meal_name": "breakfast"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "CALL_NUMBER_ERROR",
            "err_msg": "wrong calling numbers."
        },
        "input": [
            {
                "role": "user",
                "content": "For breakfast I had a 12 ounce iced coffee and a banana.\n\nFor lunch I had a quesadilla\n\nBreakfast four ounces of asparagus, two eggs, one piece of gluten free bread."
            }
        ],
        "tools": [
            {
                "type": "function",
                "function": {
                    "name": "log_food",
                    "description": "Logs a food item with details about the portion size and the meal it is associated with.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "food_name",
                            "portion_amount",
                            "meal_name"
                        ],
                        "properties": {
                            "food_name": {
                                "type": "string",
                                "description": "The name of the food to log."
                            },
                            "portion_amount": {
                                "type": "number",
                                "description": "The amount of the food item that was consumed, in specified units."
                            },
                            "portion_unit": {
                                "type": "string",
                                "description": "The unit of measure for the portion amount. Choose a unit such as 'grams', 'ounces', 'pieces', 'cups', or 'tablespoons'.",
                                "enum": [
                                    "grams",
                                    "ounces",
                                    "pieces",
                                    "cups",
                                    "tablespoons"
                                ],
                                "default": "grams"
                            },
                            "meal_name": {
                                "type": "string",
                                "description": "The name of the meal with which the food item is associated. Options include 'breakfast', 'lunch', 'dinner', or 'snack'."
                            }
                        }
                    }
                }
            }
        ],
        "expected": [
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "iced coffee"
                    ],
                    "portion_amount": [
                        12.0
                    ],
                    "portion_unit": [
                        "ounces"
                    ],
                    "meal_name": [
                        "breakfast"
                    ]
                }
            },
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "banana"
                    ],
                    "portion_amount": [
                        1.0
                    ],
                    "portion_unit": [
                        "pieces"
                    ],
                    "meal_name": [
                        "breakfast"
                    ]
                }
            },
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "quesadilla"
                    ],
                    "portion_amount": [
                        1.0
                    ],
                    "portion_unit": [
                        "pieces"
                    ],
                    "meal_name": [
                        "lunch"
                    ]
                }
            },
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "asparagus"
                    ],
                    "portion_amount": [
                        4.0
                    ],
                    "portion_unit": [
                        "ounces"
                    ],
                    "meal_name": [
                        "breakfast"
                    ]
                }
            },
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "eggs"
                    ],
                    "portion_amount": [
                        2.0
                    ],
                    "portion_unit": [
                        "pieces"
                    ],
                    "meal_name": [
                        "breakfast"
                    ]
                }
            },
            {
                "name": "log_food",
                "arguments": {
                    "food_name": [
                        "gluten free bread"
                    ],
                    "portion_amount": [
                        1.0
                    ],
                    "portion_unit": [
                        "pieces"
                    ],
                    "meal_name": [
                        "breakfast"
                    ]
                }
            }
        ]
    },
    {
        "id": 13,
        "valid_datapoint": true,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Boston, MA\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"San Francisco, CA\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, CA",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: celsius, ideal-opt: ['', 'fahrenheit']"
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Boston, MA\", \"unit\": \"celsius\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Boston, MA\", \"unit\": \"fahrenheit\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"San Francisco, CA\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "unit": "celsius"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston, MA",
                            "unit": "fahrenheit"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco, CA",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "CALL_NUMBER_ERROR",
            "err_msg": "wrong calling numbers."
        },
        "input": [
            {
                "role": "user",
                "content": "Could you tell me the current weather in Boston, MA and also in San Francisco?"
            }
        ],
        "tools": [
            {
                "type": "function",
                "function": {
                    "name": "get_current_weather",
                    "description": "Retrieves the current weather for a specified location, with the option to get the result in either Celsius or Fahrenheit.",
                    "parameters": {
                        "type": "object",
                        "properties": {
                            "location": {
                                "type": "string",
                                "description": "The location for which to retrieve the weather, in the format of 'City, State', such as 'San Francisco, CA'. If using state name then use short form."
                            },
                            "unit": {
                                "type": "string",
                                "description": "The unit of temperature for the weather report.",
                                "enum": [
                                    "celsius",
                                    "fahrenheit"
                                ],
                                "default": "fahrenheit"
                            }
                        },
                        "required": [
                            "location"
                        ]
                    }
                }
            }
        ],
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Boston, MA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "San Francisco, CA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            }
        ]
    },
    {
        "id": 14,
        "valid_datapoint": true,
        "no_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"Boston\", \"unit\": \"fahrenheit\"}}; {\"name\": \"get_current_weather\", \"parameters\": {\"location\": \"San Francisco\", \"unit\": \"celsius\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston",
                            "unit": "fahrenheit"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco",
                            "unit": "celsius"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: Boston, ideal-opt: ['Boston, MA']"
        },
        "use_stag": {
            "output": "{\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"Boston\", \"unit\": \"fahrenheit\"}}; {\"name\": \"get_current_weather\", \"parameters\":{\"location\": \"San Francisco\", \"unit\": \"fahrenheit\"}}",
            "call": [
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "Boston",
                            "unit": "fahrenheit"
                        }
                    }
                },
                {
                    "function": {
                        "name": "get_current_weather",
                        "arguments": {
                            "location": "San Francisco",
                            "unit": "fahrenheit"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: Boston, ideal-opt: ['Boston, MA']"
        },
        "input": [
            {
                "role": "user",
                "content": "What's the weather like in the two cities of Boston and San Francisco?"
            }
        ],
        "tools": [
            {
                "type": "function",
                "function": {
                    "name": "get_current_weather",
                    "description": "Retrieves the current weather information for a specified location.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "location"
                        ],
                        "properties": {
                            "location": {
                                "type": "string",
                                "description": "The location for which the current weather is requested, in the format of 'City, State', such as 'San Francisco, CA' or 'New York, NY'. Use short form for state"
                            },
                            "unit": {
                                "type": "string",
                                "description": "The unit of measurement for temperature values.",
                                "enum": [
                                    "celsius",
                                    "fahrenheit"
                                ],
                                "default": "fahrenheit"
                            }
                        }
                    }
                }
            }
        ],
        "expected": [
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "Boston, MA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            },
            {
                "name": "get_current_weather",
                "arguments": {
                    "location": [
                        "San Francisco, CA"
                    ],
                    "unit": [
                        "",
                        "fahrenheit"
                    ]
                }
            }
        ]
    },
    {
        "id": 15,
        "valid_datapoint": true,
        "no_stag": {
            "output": "{\"name\": \"cmd_controller.execute\", \"parameters\": {\"command\": \"dir C:/\", \"unit\": \"N/A\"}}; {\"name\": \"cmd_controller.execute\", \"parameters\": {\"command\": \"type nul > C:/testing.txt\", \"unit\": \"N/A\"}}",
            "call": [
                {
                    "function": {
                        "name": "cmd_controller.execute",
                        "arguments": {
                            "command": "dir C:/",
                            "unit": "N/A"
                        }
                    }
                },
                {
                    "function": {
                        "name": "cmd_controller.execute",
                        "arguments": {
                            "command": "type nul > C:/testing.txt",
                            "unit": "N/A"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: dir C:/, ideal-opt: ['dir c:\\\\', 'dir c:\\\\\\\\']"
        },
        "use_stag": {
            "output": "{\"name\": \"cmd_controller.execute\", \"parameters\":{\"command\": \"echo |\\b& cmd /c dir C:\\\\\", \"unit\": \"seconds\"}}; {\"name\": \"cmd_controller.execute\", \"parameters\":{\"command\": \"type nul > C:\\\\\\\\Testing.txt\", \"unit\": \"seconds\"}}",
            "call": [
                {
                    "function": {
                        "name": "cmd_controller.execute",
                        "arguments": {
                            "command": "echo |\b& cmd /c dir C:\\",
                            "unit": "seconds"
                        }
                    }
                },
                {
                    "function": {
                        "name": "cmd_controller.execute",
                        "arguments": {
                            "command": "type nul > C:\\\\Testing.txt",
                            "unit": "seconds"
                        }
                    }
                }
            ],
            "success": false,
            "err_type": "PARA_VALUE_ERROR",
            "err_msg": "value not match: echo |\b& cmd /c dir C:\\, ideal-opt: ['dir c:\\\\', 'dir c:\\\\\\\\']"
        },
        "input": [
            {
                "role": "user",
                "content": "list file in c drive and make file called testing.txt"
            }
        ],
        "tools": [
            {
                "type": "function",
                "function": {
                    "name": "cmd_controller.execute",
                    "description": "Executes a specified command in the Windows operating system using the os.system() function.",
                    "parameters": {
                        "type": "object",
                        "required": [
                            "command"
                        ],
                        "properties": {
                            "command": {
                                "type": "string",
                                "description": "The command line instruction to be passed to os.system() for execution, formatted as a Windows command prompt statement."
                            },
                            "unit": {
                                "type": "string",
                                "description": "The unit of measurement for the command execution time, such as 'seconds' or 'milliseconds'",
                                "enum": [
                                    "seconds",
                                    "milliseconds"
                                ],
                                "default": "N/A"
                            }
                        }
                    }
                }
            }
        ],
        "expected": [
            {
                "name": "cmd_controller.execute",
                "arguments": {
                    "command": [
                        "dir c:\\",
                        "dir c:\\\\"
                    ]
                }
            },
            {
                "name": "cmd_controller.execute",
                "arguments": {
                    "command": [
                        "echo.>C:\\testing.txt",
                        "echo.>C:\\\\testing.txt"
                    ],
                    "unit": [
                        "",
                        "N/A"
                    ]
                }
            }
        ]
    }
]